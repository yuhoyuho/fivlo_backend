services:
  postgresql:
    image: postgis/postgis:15-3.3
    container_name: fivlo-postgres
    environment:
      POSTGRES_DB: fivlo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fivlo-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      TZ: Asia/Seoul
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $REDIS_PASSWORD ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5

  fivlo-app:
    build: .
    container_name: fivlo-backend
    environment:
      # Timezone Configuration
      TZ: Asia/Seoul
      
      # Database Configuration (Spring Boot 표준)
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/fivlo_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      
      # Redis Configuration (Spring Boot 표준)
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      GOOGLE_ALLOWED_CLIENT_IDS: ${GOOGLE_ALLOWED_CLIENT_IDS}
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      
      # External APIs
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      
      # OAuth2
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      
      # URLs
      APP_BASE_URL: ${APP_BASE_URL}
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - "8080:8080"
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Firebase secrets 바인드 마운트 (보안)
      - ./src/main/resources/secrets:/app/secrets:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  postgres_data:
  redis_data:
